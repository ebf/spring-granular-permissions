buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies { classpath "gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1" }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: "com.github.hierynomus.license"
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

group = "de.ebf"
archivesBaseName = "spring-granular-permissions"
version = "1.0.3"

jar {
    manifest {
        attributes 'Implementation-Title': 'Spring Granular Permissions',
        'Implementation-Version': version
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url = uri("http://repository.dev.ebf.de/nexus/repository/releases/") }
    maven { url = uri("http://repository.dev.ebf.de/nexus/repository/snapshots/") }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
      tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
      }
    }
  }

dependencies {

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile("org.springframework.boot:spring-boot-starter-security:1.4.2.RELEASE")
    compile("org.springframework.data:spring-data-jpa:1.10.5.RELEASE")

    compile("org.apache.openjpa:openjpa-persistence-jdbc:2.4.1") {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'junit', module: 'junit'
    }

    testCompile("com.h2database:h2:1.4.191")
    testCompile 'org.springframework:spring-test:4.2.6.RELEASE'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'cglib:cglib-nodep:2.2'
    testCompile("org.springframework.boot:spring-boot-starter-web:1.4.2.RELEASE")
    testCompile("org.springframework.boot:spring-boot-starter-data-rest:1.4.2.RELEASE")
    testCompile("org.apache.httpcomponents:fluent-hc:4.5.1")
    testCompile("org.springframework.boot:spring-boot-starter-data-jpa:1.4.2.RELEASE")
}

configurations { deployerJars }

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

license {
    header = file('header.txt')
    exclude "LICENSE.txt"
}

artifacts { archives sourcesJar,javadocJar }
